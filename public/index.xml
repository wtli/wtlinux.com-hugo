<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wtlinux</title>
    <link>http://www.wtlinux.com/</link>
    <description>Recent content on wtlinux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; Copyright 2018 wtlinux</copyright>
    <lastBuildDate>Wed, 26 Dec 2018 14:00:56 +0800</lastBuildDate>
    
	<atom:link href="http://www.wtlinux.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PowerDNS部署</title>
      <link>http://www.wtlinux.com/powerdns%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 26 Dec 2018 14:00:56 +0800</pubDate>
      
      <guid>http://www.wtlinux.com/powerdns%E9%83%A8%E7%BD%B2/</guid>
      <description>PowerDNS PowerDNS提供两种服务：
 权威域名服务 转发域名服务  下面进行两种服务的安装部署过程
PowerDNS Authoritative Server 安装 yum install -y pdns yum install -y pdns-backend-mysql  更多后端支持类型
修改配置 vim /etc/pdns/pdns.conf
launch=gmysql gmysql-host=10.2.4.118 gmysql-user=pdns gmysql-dbname=pdns gmysql-password=mysecretpassword  初始化数据库 MariaDB [(none)]&amp;gt; create database pdns; MariaDB [(none)]&amp;gt; use pdns MariaDB [pdns]&amp;gt; CREATE USER &#39;pdns&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;mysecretpassword&#39;; MariaDB [pdns]&amp;gt; grant all on pdns.* to pdns@&#39;%&#39; identified by &#39;mysecretpassword&#39;; #创建表 CREATE TABLE domains ( id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, master VARCHAR(128) DEFAULT NULL, last_check INT DEFAULT NULL, type VARCHAR(6) NOT NULL, notified_serial INT UNSIGNED DEFAULT NULL, account VARCHAR(40) CHARACTER SET &#39;utf8&#39; DEFAULT NULL, PRIMARY KEY (id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE UNIQUE INDEX name_index ON domains(name); CREATE TABLE records ( id BIGINT AUTO_INCREMENT, domain_id INT DEFAULT NULL, name VARCHAR(255) DEFAULT NULL, type VARCHAR(10) DEFAULT NULL, content VARCHAR(64000) DEFAULT NULL, ttl INT DEFAULT NULL, prio INT DEFAULT NULL, disabled TINYINT(1) DEFAULT 0, ordername VARCHAR(255) BINARY DEFAULT NULL, auth TINYINT(1) DEFAULT 1, PRIMARY KEY (id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE INDEX nametype_index ON records(name,type); CREATE INDEX domain_id ON records(domain_id); CREATE INDEX ordername ON records (ordername); CREATE TABLE supermasters ( ip VARCHAR(64) NOT NULL, nameserver VARCHAR(255) NOT NULL, account VARCHAR(40) CHARACTER SET &#39;utf8&#39; NOT NULL, PRIMARY KEY (ip, nameserver) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE TABLE comments ( id INT AUTO_INCREMENT, domain_id INT NOT NULL, name VARCHAR(255) NOT NULL, type VARCHAR(10) NOT NULL, modified_at INT NOT NULL, account VARCHAR(40) CHARACTER SET &#39;utf8&#39; DEFAULT NULL, comment TEXT CHARACTER SET &#39;utf8&#39; NOT NULL, PRIMARY KEY (id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE INDEX comments_name_type_idx ON comments (name, type); CREATE INDEX comments_order_idx ON comments (domain_id, modified_at); CREATE TABLE domainmetadata ( id INT AUTO_INCREMENT, domain_id INT NOT NULL, kind VARCHAR(32), content TEXT, PRIMARY KEY (id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE INDEX domainmetadata_idx ON domainmetadata (domain_id, kind); CREATE TABLE cryptokeys ( id INT AUTO_INCREMENT, domain_id INT NOT NULL, flags INT NOT NULL, active BOOL, content TEXT, PRIMARY KEY(id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE INDEX domainidindex ON cryptokeys(domain_id); CREATE TABLE tsigkeys ( id INT AUTO_INCREMENT, name VARCHAR(255), algorithm VARCHAR(50), secret VARCHAR(255), PRIMARY KEY (id) ) Engine=InnoDB CHARACTER SET &#39;latin1&#39;; CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm); #插入一些测试数据 INSERT INTO domains (name, type) values (&#39;example.</description>
    </item>
    
    <item>
      <title>Ceph快速入门</title>
      <link>http://www.wtlinux.com/ceph%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 23 Aug 2018 14:00:56 +0800</pubDate>
      
      <guid>http://www.wtlinux.com/ceph%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>安装ceph-deploy 预安装 Ceph-deploy设置  ceph-deploy工具在管理节点上的目录之外运行。任何具有网络连接和现代python环境和ssh（如Linux）的主机都应该可以工作  架构图如下：
CentOS7：
//注册秘钥 sudo subscription-manager repos --enable=rhel-7-server-extras-rpms //安装并注册EPEL存储库 sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm // 来添加yum仓库文件 cat &amp;lt;&amp;lt; EOM &amp;gt; /etc/yum.repos.d/ceph.repo [ceph-noarch] name=Ceph noarch packages baseurl=https://download.ceph.com/rpm-{ceph-stable-release}/el7/noarch enabled=1 gpgcheck=1 type=rpm-md gpgkey=https://download.ceph.com/keys/release.asc EOM //更新仓库并安装ceph-deploy sudo yum update sudo yum install ceph-deploy  Ceph节点设置  管理节点必须具有对Ceph节点的无密码SSH访问。当ceph-deploy以用户身份登录到Ceph节点时，该特定用户必须具有无密码的sudo权限。  CentOS7：
安装时间服务器  建议安装时间服务器，特别是Ceph Monitor节点，以免时间不一致导致问题  sudo yum install ntp ntpdate ntp-doc  安装SSH服务器  确保SSH服务器在所有Ceph节点上运行  sudo yum install openssh-server  创建Ceph部署用户  ceph-deploy实用程序必须以具有无密码sudo权限的用户身份登录到Ceph节点，因为它需要安装软件和配置文件而不提示输入密码。 最新版本的ceph-deploy支持&amp;ndash;username选项，因此您可以指定任何具有无密码sudo的用户（包括root用户，但不建议这样做）。 我们建议在群集中的所有Ceph节点上为ceph-deploy创建特定用户。 请不要使用“ceph”作为用户名。  //在每个Ceph节点上创建一个新用户。 ssh user@ceph-server sudo useradd -d /home/{username} -m {username} sudo passwd {username} //对于添加到每个Ceph节点的新用户，请确保该用户具有sudo权限。 echo &amp;quot;{username} ALL = (root) NOPASSWD:ALL&amp;quot; | sudo tee /etc/sudoers.</description>
    </item>
    
    <item>
      <title>Hugo搭建个人博客教程</title>
      <link>http://www.wtlinux.com/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 22 Jul 2018 00:11:56 +0800</pubDate>
      
      <guid>http://www.wtlinux.com/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</guid>
      <description>一直有想整理自己博客的想法，但是由于各种原因一再搁置，第一是通过写文章让自己的技术得以沉淀，第二也可以进行交流，互相成长。第三也可以向大家展示自己的写作风格以及中间贯穿的一些思想。
组件介绍  hugo 主要生成博客的工具。
 github 需要用github来托管网站。
 markdown你需要知道的markdown语法。
 域名别人访问你网站的网址。
 ipic图床神器，可以上传一些图片。
   注册好自己的域名和github之后，就可以构建自己的网站啦。
 hugo 简介 hugo是使用go语言编写的，有几百种主题可供选择，也可以与自己个性化设置等相结合。官网上说hugo是世界上最快的网站构建框架，也是最受欢迎的开源静态站点生成器之一。凭借其惊人的速度和灵活性，hugo使网站构建变得更加有趣。
安装 Mac版安装
brew install hugo  查看是否安装成功
 $ hugo version Hugo Static Site Generator v0.41 darwin/amd64  使用 首先构建自己的网站，wtlinux.com是我注册的域名
 $ hugo new site wtlinux.com  查看目录结构
 $ tree wtlinux.com/ wtlinux.com/ ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes  archetypes构建新文章是默认的配置</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.wtlinux.com/about/</link>
      <pubDate>Thu, 21 Jul 2016 22:33:26 +0800</pubDate>
      
      <guid>http://www.wtlinux.com/about/</guid>
      <description>关于我 2018 ❤️</description>
    </item>
    
  </channel>
</rss>